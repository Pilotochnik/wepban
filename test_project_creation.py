#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from sqlalchemy.orm import Session
from app.core.database import SessionLocal, engine
from app.models.user import User, UserRole
from app.models.project import Project
from app.models.user_project import UserProject, ProjectRole
from app.crud.project import project_crud
from app.schemas.project import ProjectCreate

def test_project_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"""
    print("üîç –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞...")
    
    db = SessionLocal()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—è
        creator = db.query(User).filter(User.telegram_id == 434532312).first()
        if not creator:
            print("‚ùå –°–æ–∑–¥–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        print(f"‚úÖ –°–æ–∑–¥–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {creator.first_name} {creator.last_name}")
        print(f"   ID: {creator.id}")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç
        project_data = ProjectCreate(
            name="–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç",
            description="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
        )
        
        print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞...")
        try:
            project = project_crud.create(db, project_data, creator.id)
            print(f"‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω: {project.name}")
            print(f"   ID: {project.id}")
            print(f"   Created by: {project.created_by}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º UserProject
            user_project = db.query(UserProject).filter(
                UserProject.user_id == creator.id,
                UserProject.project_id == project.id
            ).first()
            
            if user_project:
                print(f"‚úÖ UserProject —Å–æ–∑–¥–∞–Ω: —Ä–æ–ª—å {user_project.role}")
            else:
                print("‚ùå UserProject –Ω–µ —Å–æ–∑–¥–∞–Ω")
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {e}")
            import traceback
            traceback.print_exc()
            return False
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False
    
    finally:
        db.close()

if __name__ == "__main__":
    test_project_creation()
