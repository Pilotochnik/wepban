from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart, Command
from app.services.api import APIService

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message, user_data: dict = None):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ
    api_service = APIService()
    welcome_text = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}.\n\nAI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏. –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–¥–∞—á–∏ –≥–æ–ª–æ—Å–æ–º –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–º."
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É - —Ç–æ–ª—å–∫–æ 2 –∫–Ω–æ–ø–∫–∏
    keyboard_buttons = [
        [InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ–µ–∫—Ç", web_app={"url": f"{api_service.WEBAPP_URL}"})],
        [InlineKeyboardButton(text="AI —á–∞—Ç", callback_data="ai_chat")]
    ]
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)
    
    await message.answer(welcome_text, reply_markup=keyboard)


@router.message(Command("help"))
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    
    help_text = """üÜò <b>–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>

üé§ <b>–ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:</b>
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∑–∞–¥–∞—á–∏. –ù–∞–ø—Ä–∏–º–µ—Ä:
‚Ä¢ "–°–æ–∑–¥–∞–π –∑–∞–¥–∞—á—É: –∫—É–ø–∏—Ç—å –∫–æ—Ä–º –¥–ª—è –æ—Ñ–∏—Å–∞ –¥–æ –∑–∞–≤—Ç—Ä–∞"
‚Ä¢ "–í–∞–∂–Ω–∞—è –∑–∞–¥–∞—á–∞: –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –∫ –ø—è—Ç–Ω–∏—Ü–µ"
‚Ä¢ "–î–æ–±–∞–≤—å –∑–∞–¥–∞—á—É –≤ –ø—Ä–æ–µ–∫—Ç –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥: —Å–æ–∑–¥–∞—Ç—å –ª–æ–≥–æ—Ç–∏–ø"

üìù <b>–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:</b>
–ú–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ —Ç–µ–∫—Å—Ç–æ–º.

üì∏ <b>–§–æ—Ç–æ:</b>
–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ, –∏ —è –ø–æ–º–æ–≥—É –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –µ–≥–æ –∫ –∑–∞–¥–∞—á–µ.

üåê <b>–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:</b>
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å Kanban –¥–æ—Å–∫–æ–π.

üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/projects - –ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã

ü§ñ <b>AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç:</b>
–Ø —É–º–µ—é –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Å:
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ–º –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
‚Ä¢ –î–µ–¥–ª–∞–π–Ω–æ–º
‚Ä¢ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ–º –Ω–∞ –ø—Ä–æ–µ–∫—Ç

–ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —è –∑–∞–¥–∞–º —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã!"""
    
    await message.answer(help_text)


@router.callback_query(F.data == "help")
async def callback_help(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–º–æ—â–∏"""
    await cmd_help(callback.message)
    await callback.answer()


@router.message(Command("projects"))
async def cmd_projects(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /projects"""
    api_service = APIService()
    
    try:
        print(f"PROJECTS: Using user ID: {message.from_user.id}")
        projects = await api_service.get_user_projects(message.from_user.id)
        
        if not projects:
            text = "üìÇ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤.\n\n–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏!"
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üöÄ –û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app={"url": f"{api_service.WEBAPP_URL}"})]
            ])
        else:
            text = "üìÇ <b>–í–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã:</b>\n\n"
            for project in projects:
                text += f"‚Ä¢ <b>{project['name']}</b>\n"
                if project.get('description'):
                    text += f"  {project['description']}\n"
                text += "\n"
            
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üöÄ –û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app={"url": f"{api_service.WEBAPP_URL}"})]
            ])
        
        await message.answer(text, reply_markup=keyboard)
        
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤: {str(e)}")


@router.callback_query(F.data == "ai_chat")
async def callback_ai_chat(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ AI —á–∞—Ç"""
    ai_chat_text = """AI —á–∞—Ç –∞–∫—Ç–∏–≤–µ–Ω.

–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–¥–∞—á–∏ –≥–æ–ª–æ—Å–æ–º –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–º. AI –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç –∏—Ö –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º.

–ü—Ä–∏–º–µ—Ä—ã:
‚Ä¢ "–°–æ–∑–¥–∞–π –∑–∞–¥–∞—á—É: –∫—É–ø–∏—Ç—å –∫–æ—Ä–º –¥–ª—è –æ—Ñ–∏—Å–∞ –¥–æ –∑–∞–≤—Ç—Ä–∞"
‚Ä¢ "–í–∞–∂–Ω–∞—è –∑–∞–¥–∞—á–∞: –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –∫ –ø—è—Ç–Ω–∏—Ü–µ"
‚Ä¢ "–î–æ–±–∞–≤—å –∑–∞–¥–∞—á—É –≤ –ø—Ä–æ–µ–∫—Ç –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥: —Å–æ–∑–¥–∞—Ç—å –ª–æ–≥–æ—Ç–∏–ø"

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."""
    
    await callback.message.edit_text(ai_chat_text)
    await callback.answer()

@router.callback_query(F.data == "my_projects")
async def callback_projects(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤"""
    print(f"CALLBACK: User ID: {callback.from_user.id}")
    print(f"CALLBACK: Bot ID: {callback.bot.id}")
    
    try:
        api_service = APIService()
        projects = await api_service.get_user_projects(callback.from_user.id)
        
        if projects:
            projects_text = "üìä <b>–í–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã:</b>\n\n"
            for project in projects:
                projects_text += f"üìÅ <b>{project['name']}</b>\n"
                if project.get('description'):
                    projects_text += f"   {project['description']}\n"
                projects_text += f"   ID: {project['id']}\n\n"
        else:
            projects_text = "üìä –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤.\n\n–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏!"
        
        await callback.message.edit_text(projects_text)
        
    except Exception as e:
        await callback.message.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤: {str(e)}")
    
    await callback.answer()
