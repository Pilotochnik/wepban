version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: project_manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=project_manager
      - DB_USER=postgres
      - DB_PASS=password
      - SECRET_KEY=your_secret_key_here
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BOT_TOKEN=${BOT_TOKEN}
      - WEBAPP_URL=${WEBAPP_URL}
      - SENTRY_DSN=${SENTRY_DSN}
      - ENVIRONMENT=production
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - uploaded_files:/app/uploaded_files

  bot:
    build: ./bot
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - BACKEND_URL=http://backend:8000
      - WEBAPP_URL=${WEBAPP_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SENTRY_DSN=${SENTRY_DSN}
      - ENVIRONMENT=production
    depends_on:
      - backend
    volumes:
      - ./bot:/app

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_BOT_USERNAME=${BOT_USERNAME}
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data:
  uploaded_files:
