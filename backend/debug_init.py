#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

try:
    print("1. –ò–º–ø–æ—Ä—Ç –±–∞–∑–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π...")
    from sqlalchemy.orm import Session
    from app.core.database import SessionLocal, engine
    print("‚úÖ SQLAlchemy –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    
    print("2. –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π...")
    from app.models.user import User, UserRole
    print("‚úÖ User –∏ UserRole –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    
    from app.models.project import Project
    print("‚úÖ Project –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    
    from app.models.task import Task
    print("‚úÖ Task –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    
    from app.models.approval import ApprovalRequest
    print("‚úÖ ApprovalRequest –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    
    from app.core.database import Base
    print("‚úÖ Base –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    
    print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ enum –∑–Ω–∞—á–µ–Ω–∏–π...")
    print(f"   CREATOR: {UserRole.CREATOR}")
    print(f"   FOREMAN: {UserRole.FOREMAN}")
    print(f"   WORKER: {UserRole.WORKER}")
    print(f"   VIEWER: {UserRole.VIEWER}")
    
    print("4. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
    Base.metadata.create_all(bind=engine)
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
    
    print("5. –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    db = SessionLocal()
    print("‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞")
    
    print("6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è...")
    creator = db.query(User).filter(User.telegram_id == 434532312).first()
    
    if creator:
        print(f"‚úÖ –°–æ–∑–¥–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {creator.first_name} {creator.last_name}")
        print(f"   –†–æ–ª—å: {creator.role}")
        print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {creator.is_active}")
    else:
        print("7. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è...")
        creator = User(
            telegram_id=434532312,
            username="ttvdnl",
            first_name="–°–æ–∑–¥–∞—Ç–µ–ª—å",
            last_name="–ü—Ä–æ–µ–∫—Ç–∞",
            role=UserRole.CREATOR,
            is_active=True
        )
        print("‚úÖ –û–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è —Å–æ–∑–¥–∞–Ω")
        
        print("8. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
        db.add(creator)
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –≤ —Å–µ—Å—Å–∏—é")
        
        print("9. –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
        db.commit()
        print("‚úÖ –ö–æ–º–º–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω")
        
        db.refresh(creator)
        print("‚úÖ –°–æ–∑–¥–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
    
    print("\nüéâ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
    
except Exception as e:
    print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
    import traceback
    print("\nüìã –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ:")
    traceback.print_exc()
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    print("\nüîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:")
    try:
        print(f"   –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {str(e)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ ADMIN –≤ enum
        if hasattr(UserRole, 'ADMIN'):
            print("   ‚ùå ADMIN –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ enum!")
        else:
            print("   ‚úÖ ADMIN –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ enum")
            
    except Exception as diag_e:
        print(f"   –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {diag_e}")
    
finally:
    try:
        db.close()
        print("\nüîí –°–µ—Å—Å–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–∞")
    except:
        pass
